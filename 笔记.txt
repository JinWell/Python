标识符:
1.以单下划线开头 _foo 的代表不能直接访问的类属性需通过类提供的接口进行访问，不能用 from xxx import * 而导入
2.双下划线开头的 __foo 代表类的私有成员
3.双下划线开头和结尾的 __foo__ 代表Python里特殊方法专用的标识
比如: __ini__()代表类的构造函数

多行语句:  使用\将一行的语句分多行显示
total = one+\
        two+\
		three;
		 
Python引号:  
可以使用任意多个引号   ' "" """  必须成对   """这种一般当作段落，多行文本使用

Python注释：
使用 # 表示注释   可以在语句或者表达式末尾

行和缩进:
Python是没有块的概念的，不同于其他的语言使用{}表示块，Python使用缩进来表示块的概念，空白是任意的，但是数量必须相同
推荐：使用tab来缩进
 
Python的空行：
空行主要是用来区分不同的块

等待用户的输入:
input 

输出：

1. 需要导入命名空间   import sys;
x = "runoob";
sys.stdout.write(x+"\n"+"write测试");

2.print   多个参数,分隔 会在一起打印
注意: print x 这种写法是老版本的写法，新版本不支持了

字符串的操作：

１.　＋　连接字符串
"xx" +　ａ

２.　　×　重复字符串
＂ｘｘｘ＂　＊　２　重复两次前面的字符串
3.获取数据
vars = "我是字符串1234567890";
vars[0:5]
  
Python列表  列表允许更新数据
list = [a,b,c,d,e];  
列表也可以使用字符串切割获取数据

Python元数组：   不允许进行数据的更新操作


Python数据类型转换:
int long float complex str repr eval list set dict frozenset chr unichr oct hex ord

Python位运算符：
a = 60
b = 13 
c = 0

0011  1100
0000  1101  //需要补齐4位，前面补0

a & b  #相同为为1
0000  1100   #12

a | b  #只要有一个1就是1
0011 1101  #61

a ^ b  #对应的二进制位相同时结果为1
00110001 #49

~ a  #每个二进制位取反操作 1变成0 0变成1
-(x+1) 

a << 2  #二进制位左移x位 右边的数字决定移动位数(高位丢弃，低位补0)
（0011  1100）=> 11110000 =240  #左移2位，放大4倍
 
a >> 2 #右移若干位，数字决定移动的位数
（0011  1100）=> 0000 1111  =15 #右移2位 缩小4倍

Python成员运算符:  #如果序列中存在返回True,否则False（字符串,列表,元组）
in | not in   

Python身份算符:  #引用同一个对象返回True
is | not is  
与之对应的是 id()  id(a) == id(b)
注意：id函数用于获取对象内存地址

is 和 == 的区别？
is 用于判断两个变量引用对象是否是同一个
== 用于判断引用变量的值是否相等

Python运算符优先级： (下面是优先级)
指数 **
按位翻转,一元加号和减号 ~+-
乘除取模和去整除 */%//
加减法 +=
<< >> 左移右移运算符
& 位 AND
^| 位运算符
<= < > >= 比较运算符
<> == != 等于运动算符
= %= 、= //= -= += *= **= 赋值运算符
is is not  身份运算符
in not in 成员运算符
not and or 逻辑运算符

while循环:
Python下面可以加上一个else，当上面的条件不成立时执行一次else

 






































